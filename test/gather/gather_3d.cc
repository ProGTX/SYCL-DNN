/*
 * Copyright Codeplay Software Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use these files except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// DO NOT MODIFY BY HAND
// This file was automatically generated by generate_gather_tests.py.
// Results calculated using Tensorflow v2.8.0.

#include <gtest/gtest.h>

#include <vector>

#include "test/gather/gather_fixture.h"
#include "test/types/cartesian_product.h"
#include "test/types/kernel_data_types.h"
#include "test/types/test_backend_types.h"
#include "test/types/to_gtest_types.h"

using DataTypeList = sycldnn::types::KernelDataTypes;
using Backends = sycldnn::types::DefaultBackendTypes_;

using TypeBackendPairs =
    sycldnn::types::CartesianProduct<DataTypeList, Backends>::type;

using namespace sycldnn;
using GTestTypePairs = sycldnn::types::ToGTestTypes<TypeBackendPairs>::type;
using IndexDataType = int32_t;  // or int64_t

template <typename Pair>
using Gather3D = GatherFixture<Pair, IndexDataType>;
TYPED_TEST_SUITE(Gather3D, GTestTypePairs);
TYPED_TEST(Gather3D, G3D_Axis_Neg3_Inp5x4x3_Ind1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {25., 26., 27., 28., 29., 30.,
                                         31., 32., 33., 34., 35., 36.};
  const std::vector<IndexDataType> indices = {2};
  gather::GatherParams params;
  params.axis = -3;
  params.indices_dims = {1};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_Neg3_Inp5x4x3_Ind5) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.};
  const std::vector<IndexDataType> indices = {4, 2, 1, 3, 2};
  gather::GatherParams params;
  params.axis = -3;
  params.indices_dims = {5};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_Neg3_Inp5x4x3_Ind5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 13., 14., 15., 16.,
      17., 18., 19., 20., 21., 22., 23., 24., 1.,  2.,  3.,  4.,  5.,  6.,
      7.,  8.,  9.,  10., 11., 12., 13., 14., 15., 16., 17., 18., 19., 20.,
      21., 22., 23., 24., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22.,
      23., 24., 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 37., 38., 39., 40.,
      41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<IndexDataType> indices = {3, 1, 1, 0, 1, 1, 0, 0, 1, 3};
  gather::GatherParams params;
  params.axis = -3;
  params.indices_dims = {5, 2};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_Neg2_Inp5x4x3_Ind1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7.,  8.,  9.,  19., 20., 21., 31., 32.,
                                         33., 43., 44., 45., 55., 56., 57.};
  const std::vector<IndexDataType> indices = {2};
  gather::GatherParams params;
  params.axis = -2;
  params.indices_dims = {1};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_Neg2_Inp5x4x3_Ind4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      4.,  5.,  6.,  1.,  2.,  3.,  1.,  2.,  3.,  1.,  2.,  3.,
      16., 17., 18., 13., 14., 15., 13., 14., 15., 13., 14., 15.,
      28., 29., 30., 25., 26., 27., 25., 26., 27., 25., 26., 27.,
      40., 41., 42., 37., 38., 39., 37., 38., 39., 37., 38., 39.,
      52., 53., 54., 49., 50., 51., 49., 50., 51., 49., 50., 51.};
  const std::vector<IndexDataType> indices = {1, 0, 0, 0};
  gather::GatherParams params;
  params.axis = -2;
  params.indices_dims = {4};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_Neg2_Inp5x4x3_Ind4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  10., 11., 12., 10., 11., 12., 7.,  8.,
      9.,  1.,  2.,  3.,  10., 11., 12., 7.,  8.,  9.,  13., 14., 15., 16.,
      17., 18., 22., 23., 24., 22., 23., 24., 19., 20., 21., 13., 14., 15.,
      22., 23., 24., 19., 20., 21., 25., 26., 27., 28., 29., 30., 34., 35.,
      36., 34., 35., 36., 31., 32., 33., 25., 26., 27., 34., 35., 36., 31.,
      32., 33., 37., 38., 39., 40., 41., 42., 46., 47., 48., 46., 47., 48.,
      43., 44., 45., 37., 38., 39., 46., 47., 48., 43., 44., 45., 49., 50.,
      51., 52., 53., 54., 58., 59., 60., 58., 59., 60., 55., 56., 57., 49.,
      50., 51., 58., 59., 60., 55., 56., 57.};
  const std::vector<IndexDataType> indices = {0, 1, 3, 3, 2, 0, 3, 2};
  gather::GatherParams params;
  params.axis = -2;
  params.indices_dims = {4, 2};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_Neg1_Inp5x4x3_Ind1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1.,  4.,  7.,  10., 13., 16., 19.,
                                         22., 25., 28., 31., 34., 37., 40.,
                                         43., 46., 49., 52., 55., 58.};
  const std::vector<IndexDataType> indices = {0};
  gather::GatherParams params;
  params.axis = -1;
  params.indices_dims = {1};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_Neg1_Inp5x4x3_Ind3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  1.,  4.,  5.,  4.,  7.,  8.,  7.,  10., 11., 10.,
      13., 14., 13., 16., 17., 16., 19., 20., 19., 22., 23., 22.,
      25., 26., 25., 28., 29., 28., 31., 32., 31., 34., 35., 34.,
      37., 38., 37., 40., 41., 40., 43., 44., 43., 46., 47., 46.,
      49., 50., 49., 52., 53., 52., 55., 56., 55., 58., 59., 58.};
  const std::vector<IndexDataType> indices = {0, 1, 0};
  gather::GatherParams params;
  params.axis = -1;
  params.indices_dims = {3};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_Neg1_Inp5x4x3_Ind3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.,  1.,  1.,  1.,  3.,  2.,  5.,  4.,  4.,  4.,  6.,  5.,  8.,  7.,
      7.,  7.,  9.,  8.,  11., 10., 10., 10., 12., 11., 14., 13., 13., 13.,
      15., 14., 17., 16., 16., 16., 18., 17., 20., 19., 19., 19., 21., 20.,
      23., 22., 22., 22., 24., 23., 26., 25., 25., 25., 27., 26., 29., 28.,
      28., 28., 30., 29., 32., 31., 31., 31., 33., 32., 35., 34., 34., 34.,
      36., 35., 38., 37., 37., 37., 39., 38., 41., 40., 40., 40., 42., 41.,
      44., 43., 43., 43., 45., 44., 47., 46., 46., 46., 48., 47., 50., 49.,
      49., 49., 51., 50., 53., 52., 52., 52., 54., 53., 56., 55., 55., 55.,
      57., 56., 59., 58., 58., 58., 60., 59.};
  const std::vector<IndexDataType> indices = {1, 0, 0, 0, 2, 1};
  gather::GatherParams params;
  params.axis = -1;
  params.indices_dims = {3, 2};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_0_Inp5x4x3_Ind1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {37., 38., 39., 40., 41., 42.,
                                         43., 44., 45., 46., 47., 48.};
  const std::vector<IndexDataType> indices = {3};
  gather::GatherParams params;
  params.axis = 0;
  params.indices_dims = {1};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_0_Inp5x4x3_Ind5) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<IndexDataType> indices = {2, 1, 4, 0, 3};
  gather::GatherParams params;
  params.axis = 0;
  params.indices_dims = {5};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_0_Inp5x4x3_Ind5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36., 1.,  2.,
      3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 37., 38., 39., 40.,
      41., 42., 43., 44., 45., 46., 47., 48., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 25., 26., 27., 28., 29., 30., 31., 32.,
      33., 34., 35., 36., 25., 26., 27., 28., 29., 30., 31., 32., 33., 34.,
      35., 36., 25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60., 37., 38.,
      39., 40., 41., 42., 43., 44., 45., 46., 47., 48., 37., 38., 39., 40.,
      41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<IndexDataType> indices = {2, 0, 3, 2, 2, 2, 2, 4, 3, 3};
  gather::GatherParams params;
  params.axis = 0;
  params.indices_dims = {5, 2};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_1_Inp5x4x3_Ind1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {4.,  5.,  6.,  16., 17., 18., 28., 29.,
                                         30., 40., 41., 42., 52., 53., 54.};
  const std::vector<IndexDataType> indices = {1};
  gather::GatherParams params;
  params.axis = 1;
  params.indices_dims = {1};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_1_Inp5x4x3_Ind4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  1.,  2.,  3.,  7.,  8.,  9.,
      13., 14., 15., 19., 20., 21., 13., 14., 15., 19., 20., 21.,
      25., 26., 27., 31., 32., 33., 25., 26., 27., 31., 32., 33.,
      37., 38., 39., 43., 44., 45., 37., 38., 39., 43., 44., 45.,
      49., 50., 51., 55., 56., 57., 49., 50., 51., 55., 56., 57.};
  const std::vector<IndexDataType> indices = {0, 2, 0, 2};
  gather::GatherParams params;
  params.axis = 1;
  params.indices_dims = {4};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_1_Inp5x4x3_Ind4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      4.,  5.,  6.,  10., 11., 12., 7.,  8.,  9.,  1.,  2.,  3.,  7.,  8.,
      9.,  7.,  8.,  9.,  10., 11., 12., 1.,  2.,  3.,  16., 17., 18., 22.,
      23., 24., 19., 20., 21., 13., 14., 15., 19., 20., 21., 19., 20., 21.,
      22., 23., 24., 13., 14., 15., 28., 29., 30., 34., 35., 36., 31., 32.,
      33., 25., 26., 27., 31., 32., 33., 31., 32., 33., 34., 35., 36., 25.,
      26., 27., 40., 41., 42., 46., 47., 48., 43., 44., 45., 37., 38., 39.,
      43., 44., 45., 43., 44., 45., 46., 47., 48., 37., 38., 39., 52., 53.,
      54., 58., 59., 60., 55., 56., 57., 49., 50., 51., 55., 56., 57., 55.,
      56., 57., 58., 59., 60., 49., 50., 51.};
  const std::vector<IndexDataType> indices = {1, 3, 2, 0, 2, 2, 3, 0};
  gather::GatherParams params;
  params.axis = 1;
  params.indices_dims = {4, 2};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_2_Inp5x4x3_Ind1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {3.,  6.,  9.,  12., 15., 18., 21.,
                                         24., 27., 30., 33., 36., 39., 42.,
                                         45., 48., 51., 54., 57., 60.};
  const std::vector<IndexDataType> indices = {2};
  gather::GatherParams params;
  params.axis = 2;
  params.indices_dims = {1};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_2_Inp5x4x3_Ind3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.,  3.,  2.,  5.,  6.,  5.,  8.,  9.,  8.,  11., 12., 11.,
      14., 15., 14., 17., 18., 17., 20., 21., 20., 23., 24., 23.,
      26., 27., 26., 29., 30., 29., 32., 33., 32., 35., 36., 35.,
      38., 39., 38., 41., 42., 41., 44., 45., 44., 47., 48., 47.,
      50., 51., 50., 53., 54., 53., 56., 57., 56., 59., 60., 59.};
  const std::vector<IndexDataType> indices = {1, 2, 1};
  gather::GatherParams params;
  params.axis = 2;
  params.indices_dims = {3};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
TYPED_TEST(Gather3D, G3D_Axis_2_Inp5x4x3_Ind3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.,  3.,  1.,  1.,  2.,  1.,  5.,  6.,  4.,  4.,  5.,  4.,  8.,  9.,
      7.,  7.,  8.,  7.,  11., 12., 10., 10., 11., 10., 14., 15., 13., 13.,
      14., 13., 17., 18., 16., 16., 17., 16., 20., 21., 19., 19., 20., 19.,
      23., 24., 22., 22., 23., 22., 26., 27., 25., 25., 26., 25., 29., 30.,
      28., 28., 29., 28., 32., 33., 31., 31., 32., 31., 35., 36., 34., 34.,
      35., 34., 38., 39., 37., 37., 38., 37., 41., 42., 40., 40., 41., 40.,
      44., 45., 43., 43., 44., 43., 47., 48., 46., 46., 47., 46., 50., 51.,
      49., 49., 50., 49., 53., 54., 52., 52., 53., 52., 56., 57., 55., 55.,
      56., 55., 59., 60., 58., 58., 59., 58.};
  const std::vector<IndexDataType> indices = {1, 2, 0, 0, 1, 0};
  gather::GatherParams params;
  params.axis = 2;
  params.indices_dims = {3, 2};
  params.input_dims = {5, 4, 3};
  this->test_gather(exp_out, params, indices);
}
